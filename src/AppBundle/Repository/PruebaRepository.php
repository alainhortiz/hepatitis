<?php

namespace AppBundle\Repository;

use AppBundle\Entity\Prueba;

/**
 * PruebaRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PruebaRepository extends \Doctrine\ORM\EntityRepository
{
    public function agregarPrueba($data)
    {
        try{
            $em = $this->getEntityManager();
            $prueba = new Prueba();
            $prueba->setNombre($data['nombre']);
            $prueba->setValor($data['valor']);

            $tipoEtiologia = $em->getRepository('AppBundle:TipoEtiologia')->find($data['tipoEtiologia']);
            $prueba->setTipoEtiologia($tipoEtiologia);

            $em->persist($prueba);
            $em->flush();
            $msg = $prueba;

        }catch (\Exception $e)
        {
            if(strpos($e->getMessage() , 'Duplicate entry') > 0)
            {
                $msg = 'La prueba ya existe , no se puede agregar';
            }
            else
            {
                $msg = 'Se produjo un error al insertar la prueba';
            }
        }

        return $msg;
    }

    public function modificarPrueba($data)
    {
        try
        {
            $em = $this->getEntityManager();
            $prueba = $em->getRepository('AppBundle:Prueba')->find($data['idPrueba']);
            $prueba->setNombre($data['nombre']);
            $prueba->setValor($data['valor']);

            $tipoEtiologia = $em->getRepository('AppBundle:TipoEtiologia')->find($data['tipoEtiologia']);
            $prueba->setTipoEtiologia($tipoEtiologia);

            $em->persist($prueba);
            $em->flush();
            $msg = $prueba;

        }catch (\Exception $e)
        {
            $msg = 'Se produjo un error al modificar la prueba';
        }

        return $msg;
    }

    public function eliminarPrueba($id)
    {
        try {
            $em = $this->getEntityManager();
            $prueba = $em->getRepository('AppBundle:Prueba')->find($id);

            $em->remove($prueba);
            $em->flush();
            $msg = $prueba;

        } catch (\Exception $e) {

            if (strpos($e->getMessage(), 'foreign key') > 0) {
                $msg = 'Existen pacientes asociados a esta prueba, no se puede eliminar';
            } else {
                $msg = 'Se produjo un error al eliminar la prueba';
            }
        }
        return $msg;
    }

    public function pruebasHijos()
    {
        $em = $this->getEntityManager();

        $dql = 'SELECT p FROM AppBundle:Prueba p JOIN p.resultadosPruebas r WHERE  p.menor=1';

        $query = $em->createQuery($dql);
        $pruebas = $query->getResult();

        return $pruebas;
    }
}
