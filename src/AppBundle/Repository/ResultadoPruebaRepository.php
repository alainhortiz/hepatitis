<?php

namespace AppBundle\Repository;

use AppBundle\Entity\ResultadoPrueba;

/**
 * ResultadoPruebaRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ResultadoPruebaRepository extends \Doctrine\ORM\EntityRepository
{
    public function agregarResultadoPrueba($data)
    {
        try{
            $em = $this->getEntityManager();
            $prueba = $em->getRepository('AppBundle:Prueba')->find($data['idPrueba']);
            $result = $em->getRepository('AppBundle:ResultadoPrueba')->findBy(array('resultadoPrueba' => $data['resultado'] , 'prueba' => $prueba));
            if(!$result){
                $resultadoPrueba = new ResultadoPrueba();
                $resultadoPrueba->setResultadoPrueba($data['resultado']);


                $resultadoPrueba->setPrueba($prueba);

                $em->persist($resultadoPrueba);
                $em->flush();
                $msg = $resultadoPrueba;
            }
            else{
                $msg = 'Este resultado ya existe para esta prueba';
            }
        }catch (\Exception $e)
        {
            $msg = 'Se produjo un error al insertar el resultado de la prueba';
        }

        return $msg;
    }

    public function modificarResultadoPrueba($data)
    {
        try
        {
            $em = $this->getEntityManager();
            $resultadoPrueba = $em->getRepository('AppBundle:ResultadoPrueba')->find($data['idResultadoPrueba']);
            $resultadoPrueba->setResultadoPrueba($data['resultado']);

            $em->persist($resultadoPrueba);
            $em->flush();
            $msg = $resultadoPrueba;

        }catch (\Exception $e)
        {
            $msg = 'Se produjo un error al modificar el resultado de la prueba';
        }

        return $msg;
    }

    public function eliminarResultadoPrueba($id)
    {
        try {
            $em = $this->getEntityManager();
            $resultadoPrueba = $em->getRepository('AppBundle:ResultadoPrueba')->find($id);

            $em->remove($resultadoPrueba);
            $em->flush();
            $msg = $resultadoPrueba;

        } catch (\Exception $e) {

            if (strpos($e->getMessage(), 'foreign key') > 0) {
                $msg = 'Existen pruebas asociadas a este resultado, no se puede eliminar';
            } else {
                $msg = 'Se produjo un error al eliminar el resultado de la prueba';
            }
        }
        return $msg;
    }
}
